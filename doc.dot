

digraph lala
{
	main [fillcolor="#eccccc"];
	PL_initialize [fillcolor="#eccccc"];
	main -> PL_initialize;

	irc_raw_send [fillcolor="#eccccc"];
	irc_start [fillcolor="#cceccc"];
	irc_read_msg [fillcolor="#eccccc"];
	irc_connect [fillcolor="#eccccc"];
	main irc_connect irc_read_msg irc_raw_send;

	node [fillcolor="#eccccc"];
	irc_connect -> socket;
	irc_connect -> connect;

	node [fillcolor="#cceccc"];


	main -> irc_start;
			irc_start -> irc_connect;
			irc_start -> irc_auth;

	main -> irc_read_msg -> irc_raw_receive -> irc_receive;


	bot_control [width=1.3] [label="{ bot_control | Implementa os comandos:\n!away, !topic, !nick, !join, ...}"];
	irc_response [width=1.3] [label="{ irc_response | Implementa comandos\nsobre base de conhecimento}"];
	irc_admin_response [width=1.3] [label="{ irc_admin_response | Implementa os comandos:\n!run, !calc}"];
	irc_receive -> bot_control			-> tmp;
	irc_receive -> irc_admin_response	-> tmp;
	irc_receive -> irc_response			-> tmp;
	

	irc_send -> irc_raw_send;
	
	tmp[label="..."];
	tmp -> irc_privmsg	-> irc_send;
	tmp -> irc_notice	-> irc_send;
	tmp -> irc_join		-> irc_send;
	tmp -> irc_away		-> irc_send;
	tmp -> irc_action	-> irc_send;
	tmp -> irc_mode		-> irc_send;

	subgraph cluster
	{
		C [fillcolor="#eccccc",shape=box];
		prolog [fillcolor="#cceccc",shape=box];
	}

}
